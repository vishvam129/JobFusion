{"ast":null,"code":"var _jsxFileName = \"D:\\\\SEM4\\\\Job-Fusion\\\\Job-Fusion\\\\Job-Fusion\\\\frontend\\\\src\\\\lib\\\\EmailInput.js\";\nimport { TextField } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailInput = props => {\n  const {\n    label,\n    value,\n    onChange,\n    inputErrorHandler,\n    handleInputError,\n    required,\n    className\n  } = props;\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    label: label,\n    variant: \"outlined\",\n    value: value,\n    onChange: onChange,\n    helperText: inputErrorHandler.email.message,\n    onBlur: event => {\n      if (event.target.value === \"\") {\n        if (required) {\n          handleInputError(\"email\", true, \"Email is required\");\n        } else {\n          handleInputError(\"email\", false, \"\");\n        }\n      } else {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (re.test(String(event.target.value).toLowerCase())) {\n          handleInputError(\"email\", false, \"\");\n        } else {\n          handleInputError(\"email\", true, \"Incorrect email format\");\n        }\n      }\n    },\n    error: inputErrorHandler.email.error,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = EmailInput;\nexport default EmailInput;\nvar _c;\n$RefreshReg$(_c, \"EmailInput\");","map":{"version":3,"names":["TextField","jsxDEV","_jsxDEV","EmailInput","props","label","value","onChange","inputErrorHandler","handleInputError","required","className","variant","helperText","email","message","onBlur","event","target","re","test","String","toLowerCase","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SEM4/Job-Fusion/Job-Fusion/Job-Fusion/frontend/src/lib/EmailInput.js"],"sourcesContent":["import { TextField } from \"@material-ui/core\";\n\nconst EmailInput = (props) => {\n  const {\n    label,\n    value,\n    onChange,\n    inputErrorHandler,\n    handleInputError,\n    required,\n    className,\n  } = props;\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={value}\n      onChange={onChange}\n      helperText={inputErrorHandler.email.message}\n      onBlur={(event) => {\n        if (event.target.value === \"\") {\n          if (required) {\n            handleInputError(\"email\", true, \"Email is required\");\n          } else {\n            handleInputError(\"email\", false, \"\");\n          }\n        } else {\n          const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          if (re.test(String(event.target.value).toLowerCase())) {\n            handleInputError(\"email\", false, \"\");\n          } else {\n            handleInputError(\"email\", true, \"Incorrect email format\");\n          }\n        }\n      }}\n      error={inputErrorHandler.email.error}\n      className={className}\n    />\n  );\n};\n\nexport default EmailInput;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM;IACJC,KAAK;IACLC,KAAK;IACLC,QAAQ;IACRC,iBAAiB;IACjBC,gBAAgB;IAChBC,QAAQ;IACRC;EACF,CAAC,GAAGP,KAAK;EAET,oBACEF,OAAA,CAACF,SAAS;IACRK,KAAK,EAAEA,KAAM;IACbO,OAAO,EAAC,UAAU;IAClBN,KAAK,EAAEA,KAAM;IACbC,QAAQ,EAAEA,QAAS;IACnBM,UAAU,EAAEL,iBAAiB,CAACM,KAAK,CAACC,OAAQ;IAC5CC,MAAM,EAAGC,KAAK,IAAK;MACjB,IAAIA,KAAK,CAACC,MAAM,CAACZ,KAAK,KAAK,EAAE,EAAE;QAC7B,IAAII,QAAQ,EAAE;UACZD,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,mBAAmB,CAAC;QACtD,CAAC,MAAM;UACLA,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC;QACtC;MACF,CAAC,MAAM;QACL,MAAMU,EAAE,GAAG,uJAAuJ;QAClK,IAAIA,EAAE,CAACC,IAAI,CAACC,MAAM,CAACJ,KAAK,CAACC,MAAM,CAACZ,KAAK,CAAC,CAACgB,WAAW,CAAC,CAAC,CAAC,EAAE;UACrDb,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC;QACtC,CAAC,MAAM;UACLA,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,wBAAwB,CAAC;QAC3D;MACF;IACF,CAAE;IACFc,KAAK,EAAEf,iBAAiB,CAACM,KAAK,CAACS,KAAM;IACrCZ,SAAS,EAAEA;EAAU;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEN,CAAC;AAACC,EAAA,GAtCIzB,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}